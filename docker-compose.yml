version: '3.8'

services:
  # Main CropSmart Application
  cropsmart:
    build:
      context: .
      dockerfile: Dockerfile
      target: production
    container_name: cropsmart-app
    ports:
      - "5000:5000"
    environment:
      - FLASK_ENV=production
      - PORT=5000
      - PYTHONPATH=/app
    volumes:
      # Persist model files and uploads
      - ./models:/app/models
      - ./uploads:/app/uploads
      - ./data:/app/data
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "python", "-c", "import requests; requests.get('http://localhost:5000/health', timeout=10)"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    networks:
      - cropsmart-network

  # Development version with hot reload
  cropsmart-dev:
    build:
      context: .
      dockerfile: Dockerfile
      target: builder
    container_name: cropsmart-dev
    ports:
      - "5001:5000"
    environment:
      - FLASK_ENV=development
      - FLASK_DEBUG=1
      - PORT=5000
      - PYTHONPATH=/app
    volumes:
      # Mount source code for development
      - .:/app
      - ./models:/app/models
      - ./uploads:/app/uploads
    command: ["python", "app.py"]
    networks:
      - cropsmart-network
    profiles:
      - dev

  # Nginx reverse proxy (optional for production)
  nginx:
    image: nginx:alpine
    container_name: cropsmart-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
    depends_on:
      - cropsmart
    restart: unless-stopped
    networks:
      - cropsmart-network
    profiles:
      - production

  # Redis for caching (optional)
  redis:
    image: redis:7-alpine
    container_name: cropsmart-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    restart: unless-stopped
    networks:
      - cropsmart-network
    profiles:
      - production

networks:
  cropsmart-network:
    driver: bridge

volumes:
  redis_data:
